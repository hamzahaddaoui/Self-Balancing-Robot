Microchip MPLAB XC8 Compiler V1.38 ()

Linker command line:

--edf=C:\Program Files (x86)\Microchip\xc8\v1.38\dat\en_msgs.txt -cs \
  -h+project.sym --cmf=project.cmf -z -Q18F2580 \
  -oC:\Users\HAMZAH~1\AppData\Local\Temp\s3fg.2 -Mproject.map -E1 -ver=XC8 \
  -ASTACK=014Ah-05ffh -pstack=STACK -ACODE=00h-07FFFh -ACONST=00h-07FFFh \
  -ASMALLCONST=0600h-06FFhx122 -AMEDIUMCONST=0600h-07FFFh -ACOMRAM=01h-05Fh \
  -AABS1=00h-05FFh -ABIGRAM=01h-05FFh -ARAM=060h-0FFh,0100h-01FFhx5 \
  -ABANK0=060h-0FFh -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh \
  -ABANK3=0300h-03FFh -ABANK4=0400h-04FFh -ABANK5=0500h-05FFh \
  -ASFR=0D00h-0DFFhx2,0F00h-0F5Fh,0F60h-0FFFh \
  -preset_vec=00h,intcode=08h,intcodelo,powerup,init,end_init \
  -pramtop=0600h -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST \
  -pconst=CONST -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  startup.obj project.obj 

Object code version is 3.11

Machine type is 18F2580

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
startup.obj     end_init                             16       16        4        4       0
                reset_vec                             0        0        4        0       0
                config                           300000   300000        8   300000       0
project.obj     intcode                               8        8        E        4       0
                temp                                 48       48        1        1       1
                smallconst                          600      600       DC      300       0
                text42                             2CC2     2CC2       66      36E       0
                intcode_body                       263C     263C       C6      36E       0
                text40                             2F7E     2F7E       12      36E       0
                text39                             2F2C     2F2C       24      36E       0
                text38                             27BC     27BC       AE      36E       0
                text37                             1870     1870      1AC      36E       0
                text36                             2574     2574       C8      36E       0
                text35                             1BC6     1BC6      152      36E       0
                text34                             2F08     2F08       24      36E       0
                text33                             22D4     22D4       F4      36E       0
                text32                              D3A      D3A      36A      36E       0
                text31                             2F90     2F90        C      36E       0
                text30                             2EB8     2EB8       2A      36E       0
                text29                             1D18     1D18      14C      36E       0
                text28                             2EE2     2EE2       26      36E       0
                text27                             23C8     23C8       E0      36E       0
                text26                             2E5E     2E5E       30      36E       0
                text25                             14C8     14C8      1EC      36E       0
                text24                             2F50     2F50       1C      36E       0
                text23                             2F6C     2F6C       12      36E       0
                text22                             2E8E     2E8E       2A      36E       0
                text21                             2B4A     2B4A       8C      36E       0
                text20                             2ABE     2ABE       8C      36E       0
                text19                             2A32     2A32       8C      36E       0
                text18                             29A6     29A6       8C      36E       0
                text17                             2D28     2D28       5C      36E       0
                text16                             2E26     2E26       38      36E       0
                text15                             2DDA     2DDA       4C      36E       0
                text14                             2BD6     2BD6       78      36E       0
                text13                             2916     2916       90      36E       0
                text12                             21E0     21E0       F4      36E       0
                text11                             20CC     20CC      114      36E       0
                text10                             10A4     10A4      236      36E       0
                text9                              1E64     1E64      142      36E       0
                text8                              1A1C     1A1C      1AA      36E       0
                text7                              16B4     16B4      1BC      36E       0
                text6                               6DC      6DC      65E      36E       0
                text5                              24A8     24A8       CC      36E       0
                text4                              2D84     2D84       56      36E       0
                text3                              1FA6     1FA6      126      36E       0
                text2                              2702     2702       BA      36E       0
                text1                              286A     286A       AC      36E       0
                text0                              12DA     12DA      1EE      36E       0
                cstackCOMRAM                          1        1       32        1       1
                cstackBANK0                          60       60       73       60       1
                cstackBANK1                         100      100       27      100       1
                bssBANK1                            127      127       23      100       1
                dataBANK0                            E7       E7        6       60       1
                bssBANK0                             D3       D3       14       60       1
                dataCOMRAM                           3E       3E        9        1       1
                bssCOMRAM                            33       33        B        1       1
                bitbssCOMRAM                        238       47        1        1       1     8
                cinit                              2C4E     2C4E       74      36E       0
                idataBANK0                         2FA5     2FA5        6      36E       0
                idataCOMRAM                        2F9C     2F9C        9      36E       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             16       16        4         0
                intcode                               8        8        E         0
                reset_vec                             0        0        4         0
                text42                             2CC2     2CC2       66         0
                intcode_body                       263C     263C       C6         0
                text40                             2F7E     2F7E       12         0
                text39                             2F2C     2F2C       24         0
                text38                             27BC     27BC       AE         0
                text37                             1870     1870      1AC         0
                text36                             2574     2574       C8         0
                text35                             1BC6     1BC6      152         0
                text34                             2F08     2F08       24         0
                text33                             22D4     22D4       F4         0
                text32                              D3A      D3A      36A         0
                text31                             2F90     2F90        C         0
                text30                             2EB8     2EB8       2A         0
                text29                             1D18     1D18      14C         0
                text28                             2EE2     2EE2       26         0
                text27                             23C8     23C8       E0         0
                text26                             2E5E     2E5E       30         0
                text25                             14C8     14C8      1EC         0
                text24                             2F50     2F50       1C         0
                text23                             2F6C     2F6C       12         0
                text22                             2E8E     2E8E       2A         0
                text21                             2B4A     2B4A       8C         0
                text20                             2ABE     2ABE       8C         0
                text19                             2A32     2A32       8C         0
                text18                             29A6     29A6       8C         0
                text17                             2D28     2D28       5C         0
                text16                             2E26     2E26       38         0
                text15                             2DDA     2DDA       4C         0
                text14                             2BD6     2BD6       78         0
                text13                             2916     2916       90         0
                text12                             21E0     21E0       F4         0
                text11                             20CC     20CC      114         0
                text10                             10A4     10A4      236         0
                text9                              1E64     1E64      142         0
                text8                              1A1C     1A1C      1AA         0
                text7                              16B4     16B4      1BC         0
                text6                               6DC      6DC      65E         0
                text5                              24A8     24A8       CC         0
                text4                              2D84     2D84       56         0
                text3                              1FA6     1FA6      126         0
                text2                              2702     2702       BA         0
                text1                              286A     286A       AC         0
                text0                              12DA     12DA      1EE         0
                cinit                              2C4E     2C4E       74         0
                idataBANK0                         2FA5     2FA5        6         0
                idataCOMRAM                        2F9C     2F9C        9         0

        CLASS   CONST          

        CLASS   SMALLCONST     
                smallconst                          600      600       DC         0

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                temp                                 48       48        1         1
                cstackCOMRAM                          1        1       32         1
                dataCOMRAM                           3E       3E        9         1
                bssCOMRAM                            33       33        B         1
                bitbssCOMRAM                        238       47        1         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          
                cstackBANK0                          60       60       73         1
                dataBANK0                            E7       E7        6         1
                bssBANK0                             D3       D3       14         1

        CLASS   BANK1          
                cstackBANK1                         100      100       27         1
                bssBANK1                            127      127       23         1

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   BANK4          

        CLASS   BANK5          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        8         0

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  000048  000049         1       1  COMRAM  
                intcode                        000008  000012  00001A         4       0  CODE    
                cstackBANK0                    000060  00008D  0000ED        60       1  BANK0   
                cstackBANK1                    000100  00004A  00014A       100       1  BANK1   
                smallconst                     000600  0000DC  0006DC       300       0  SMALLCON
                text6                          0006DC  0028CF  002FAB       36E       0  CODE    
                config                         300000  000008  300008    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0000ED-0000FF               13
        BANK1            00014A-0001FF               B6
        BANK2            000200-0002FF              100
        BANK3            000300-0003FF              100
        BANK4            000400-0004FF              100
        BANK5            000500-0005FF              100
        BIGRAM           000049-00005F               17
                         0000ED-0000FF               13
                         00014A-0005FF              4B6
        CODE             000004-000007                4
                         00001A-0005FF              5E6
                         002FAB-007FFF             5055
        COMRAM           000049-00005F               17
        CONFIG           300008-30000D                6
        CONST            000004-000007                4
                         00001A-0005FF              5E6
                         002FAB-007FFF             5055
        EEDATA           F00000-F000FF              100
        IDLOC            200000-200007                8
        MEDIUMCONST      002FAB-007FFF             5055
        RAM              0000ED-0000FF               13
                         00014A-0005FF              100
        SFR              000D00-000FFF              100
        SMALLCONST       002FAB-007FFF              100
        STACK            00014A-0005FF              4B6

                                  Symbol Table

?___aldiv                 cstackCOMRAM 000024
?___altoft                cstackCOMRAM 000027
?___awtoft                cstackCOMRAM 000020
?___ftadd                 cstackCOMRAM 000024
?___ftdiv                 cstackBANK0  000075
?___ftmul                 cstackBANK0  000060
?___ftneg                 cstackCOMRAM 000020
?___ftpack                cstackCOMRAM 000018
?___ftsub                 cstackBANK0  000060
?___fttol                 cstackCOMRAM 000018
?___llmod                 cstackCOMRAM 000001
?___lltoft                cstackCOMRAM 000020
?___lmul                  cstackCOMRAM 000018
?___wmul                  cstackCOMRAM 000018
?_atan                    cstackBANK0  0000B1
?_eval_poly               cstackBANK0  00006C
?_exp                     cstackBANK0  000084
?_fabs                    cstackCOMRAM 000023
?_floor                   cstackBANK0  000075
?_frexp                   cstackCOMRAM 000018
?_getAccelX               cstackCOMRAM 00001A
?_getAccelY               cstackCOMRAM 00001A
?_getAccelZ               cstackCOMRAM 00001A
?_getGyroY                cstackCOMRAM 00001A
?_ldexp                   cstackBANK0  000078
?_log                     cstackBANK0  000078
?_map                     cstackBANK0  000060
?_pow                     cstackBANK0  00008D
?_sqrt                    cstackBANK0  00009E
DelayMs@_dcnt             cstackCOMRAM 00001A
DelayMs@cnt               cstackCOMRAM 000018
DelayMs@i                 cstackCOMRAM 000019
PIDupdate@Dterm           cstackBANK0  000087
PIDupdate@Iterm           cstackBANK0  000084
PIDupdate@Pterm           cstackBANK0  000081
PIDupdate@precErrore      bssCOMRAM    000033
PIDupdate@sumErrore       bssBANK0     0000D7
WriteI2C@data_out         cstackCOMRAM 000019
_BIT                      bitbssCOMRAM 000238
_BRG16                    (abs)        007DC3
_BRGH                     (abs)        007D62
_CCP1CON                  (abs)        000FBD
_CCPR1L                   (abs)        000FBE
_DelayMs                  text30       002EB8
_GIE                      (abs)        007F97
_IdleI2C                  text23       002F6C
_K                        dataBANK0    0000E7
_OSCCON                   (abs)        000FD3
_OpenI2C_StSpeed          text40       002F7E
_PICsetup                 text39       002F2C
_PID                      bssCOMRAM    000039
_PIDupdate                text32       000D3A
_PIDupdate$1197           cstackBANK0  00008A
_PIDupdate$403            cstackBANK0  000075
_PIDupdate$404            cstackBANK0  000078
_PIDupdate$405            cstackBANK0  00007B
_PIDupdate$406            cstackBANK0  00007E
_PLLEN                    (abs)        007CDE
_PR2                      (abs)        000FCB
_PWMSetup                 text31       002F90
_RA0                      (abs)        007C00
_RADtoDEG                 smallconst   000677
_RB2                      (abs)        007C0A
_RB3                      (abs)        007C0B
_RB4                      (abs)        007C0C
_RB5                      (abs)        007C0D
_RCIE                     (abs)        007CED
_RCSTA                    (abs)        000FAB
_ReadI2C                  text24       002F50
_SPBRG                    (abs)        000FAF
_SPEN                     (abs)        007D5F
_SSPADD                   (abs)        000FC8
_SSPBUF                   (abs)        000FC9
_SSPCON1                  (abs)        000FC6
_SSPCON1bits              (abs)        000FC6
_SSPCON2                  (abs)        000FC5
_SSPCON2bits              (abs)        000FC5
_SSPSTAT                  (abs)        000FC7
_SSPSTATbits              (abs)        000FC7
_T0CON                    (abs)        000FD5
_T2CON                    (abs)        000FCA
_TMR0                     (abs)        000FD6
_TMR0IE                   (abs)        007F95
_TMR0IF                   (abs)        007F92
_TRISA                    (abs)        000F92
_TRISB                    (abs)        000F93
_TRISC                    (abs)        000F94
_TXEN                     (abs)        007D65
_TXIF                     (abs)        007CF4
_TXREG                    (abs)        000FAD
_TXSTA                    (abs)        000FAC
_WriteI2C                 text22       002E8E
__CFG_DEBUG$ON            (abs)        000000
__CFG_LVP$OFF             (abs)        000000
__CFG_MCLRE$ON            (abs)        000000
__CFG_OSC$IRCIO7          (abs)        000000
__CFG_PBADEN$OFF          (abs)        000000
__CFG_WDT$OFF             (abs)        000000
__HRAM                    (abs)        000000
__Habs1                   abs1         000000
__Hbank0                  bank0        000000
__Hbank1                  bank1        000000
__Hbank2                  bank2        000000
__Hbank3                  bank3        000000
__Hbank4                  bank4        000000
__Hbank5                  bank5        000000
__Hbigbss                 bigbss       000000
__Hbigdata                bigdata      000000
__Hbigram                 bigram       000000
__HbitbssCOMRAM           bitbssCOMRAM 000000
__Hbss                    bss          000000
__HbssBANK0               bssBANK0     000000
__HbssBANK1               bssBANK1     000000
__HbssCOMRAM              bssCOMRAM    000000
__Hcinit                  cinit        000000
__Hclrtext                clrtext      000000
__Hcomram                 comram       000000
__Hconfig                 config       300008
__Hconst                  const        000000
__HcstackBANK0            cstackBANK0  000000
__HcstackBANK1            cstackBANK1  000000
__HcstackCOMRAM           cstackCOMRAM 000000
__Hdata                   data         000000
__HdataBANK0              dataBANK0    000000
__HdataCOMRAM             dataCOMRAM   000000
__Heeprom_data            eeprom_data  000000
__Hend_init               end_init     00001A
__Hfarbss                 farbss       000000
__Hfardata                fardata      000000
__Hibigdata               ibigdata     000000
__Hidata                  idata        000000
__HidataBANK0             idataBANK0   000000
__HidataCOMRAM            idataCOMRAM  000000
__Hidloc                  idloc        000000
__Hifardata               ifardata     000000
__Hinit                   init         000016
__Hintcode                intcode      000016
__Hintcode_body           intcode_body 000000
__Hintcodelo              intcodelo    000016
__Hintentry               intentry     000000
__Hintret                 intret       000000
__Hintsave_regs           intsave_regs 000000
__Hirdata                 irdata       000000
__Hmediumconst            mediumconst  000000
__HnvFARRAM               nvFARRAM     000000
__Hnvbit                  nvbit        000000
__Hnvrram                 nvrram       000000
__Hparam                  rparam       000000
__Hpowerup                powerup      000016
__Hram                    ram          000000
__Hramtop                 ramtop       000600
__Hrbit                   rbit         000000
__Hrbss                   rbss         000000
__Hrdata                  rdata        000000
__Hreset_vec              reset_vec    000004
__Hrparam                 rparam       000000
__Hsfr                    sfr          000000
__Hsmallconst             smallconst   0006DC
__Hspace_0                (abs)        300008
__Hspace_1                (abs)        000239
__Hspace_2                (abs)        000000
__Hstack                  stack        000000
__Hstruct                 struct       000000
__Htemp                   temp         000049
__Htext                   text         000000
__Htext0                  text0        000000
__Htext1                  text1        000000
__Htext10                 text10       000000
__Htext11                 text11       000000
__Htext12                 text12       000000
__Htext13                 text13       000000
__Htext14                 text14       000000
__Htext15                 text15       000000
__Htext16                 text16       000000
__Htext17                 text17       000000
__Htext18                 text18       000000
__Htext19                 text19       000000
__Htext2                  text2        000000
__Htext20                 text20       000000
__Htext21                 text21       000000
__Htext22                 text22       000000
__Htext23                 text23       000000
__Htext24                 text24       000000
__Htext25                 text25       000000
__Htext26                 text26       000000
__Htext27                 text27       000000
__Htext28                 text28       000000
__Htext29                 text29       000000
__Htext3                  text3        000000
__Htext30                 text30       000000
__Htext31                 text31       000000
__Htext32                 text32       000000
__Htext33                 text33       000000
__Htext34                 text34       000000
__Htext35                 text35       000000
__Htext36                 text36       000000
__Htext37                 text37       000000
__Htext38                 text38       000000
__Htext39                 text39       000000
__Htext4                  text4        000000
__Htext40                 text40       000000
__Htext42                 text42       000000
__Htext5                  text5        000000
__Htext6                  text6        000000
__Htext7                  text7        000000
__Htext8                  text8        000000
__Htext9                  text9        000000
__LRAM                    (abs)        000001
__Labs1                   abs1         000000
__Lbank0                  bank0        000000
__Lbank1                  bank1        000000
__Lbank2                  bank2        000000
__Lbank3                  bank3        000000
__Lbank4                  bank4        000000
__Lbank5                  bank5        000000
__Lbigbss                 bigbss       000000
__Lbigdata                bigdata      000000
__Lbigram                 bigram       000000
__LbitbssCOMRAM           bitbssCOMRAM 000000
__Lbss                    bss          000000
__LbssBANK0               bssBANK0     000000
__LbssBANK1               bssBANK1     000000
__LbssCOMRAM              bssCOMRAM    000000
__Lcinit                  cinit        000000
__Lclrtext                clrtext      000000
__Lcomram                 comram       000000
__Lconfig                 config       300000
__Lconst                  const        000000
__LcstackBANK0            cstackBANK0  000000
__LcstackBANK1            cstackBANK1  000000
__LcstackCOMRAM           cstackCOMRAM 000000
__Ldata                   data         000000
__LdataBANK0              dataBANK0    000000
__LdataCOMRAM             dataCOMRAM   000000
__Leeprom_data            eeprom_data  000000
__Lend_init               end_init     000016
__Lfarbss                 farbss       000000
__Lfardata                fardata      000000
__Libigdata               ibigdata     000000
__Lidata                  idata        000000
__LidataBANK0             idataBANK0   000000
__LidataCOMRAM            idataCOMRAM  000000
__Lidloc                  idloc        000000
__Lifardata               ifardata     000000
__Linit                   init         000016
__Lintcode                intcode      000008
__Lintcode_body           intcode_body 000000
__Lintcodelo              intcodelo    000016
__Lintentry               intentry     000000
__Lintret                 intret       000000
__Lintsave_regs           intsave_regs 000000
__Lirdata                 irdata       000000
__Lmediumconst            mediumconst  000000
__LnvFARRAM               nvFARRAM     000000
__Lnvbit                  nvbit        000000
__Lnvrram                 nvrram       000000
__Lparam                  rparam       000000
__Lpowerup                powerup      000016
__Lram                    ram          000000
__Lramtop                 ramtop       000600
__Lrbit                   rbit         000000
__Lrbss                   rbss         000000
__Lrdata                  rdata        000000
__Lreset_vec              reset_vec    000000
__Lrparam                 rparam       000000
__Lsfr                    sfr          000000
__Lsmallconst             smallconst   000600
__Lspace_0                (abs)        000000
__Lspace_1                (abs)        000000
__Lspace_2                (abs)        000000
__Lstack                  stack        000000
__Lstruct                 struct       000000
__Ltemp                   temp         000048
__Ltext                   text         000000
__Ltext0                  text0        000000
__Ltext1                  text1        000000
__Ltext10                 text10       000000
__Ltext11                 text11       000000
__Ltext12                 text12       000000
__Ltext13                 text13       000000
__Ltext14                 text14       000000
__Ltext15                 text15       000000
__Ltext16                 text16       000000
__Ltext17                 text17       000000
__Ltext18                 text18       000000
__Ltext19                 text19       000000
__Ltext2                  text2        000000
__Ltext20                 text20       000000
__Ltext21                 text21       000000
__Ltext22                 text22       000000
__Ltext23                 text23       000000
__Ltext24                 text24       000000
__Ltext25                 text25       000000
__Ltext26                 text26       000000
__Ltext27                 text27       000000
__Ltext28                 text28       000000
__Ltext29                 text29       000000
__Ltext3                  text3        000000
__Ltext30                 text30       000000
__Ltext31                 text31       000000
__Ltext32                 text32       000000
__Ltext33                 text33       000000
__Ltext34                 text34       000000
__Ltext35                 text35       000000
__Ltext36                 text36       000000
__Ltext37                 text37       000000
__Ltext38                 text38       000000
__Ltext39                 text39       000000
__Ltext4                  text4        000000
__Ltext40                 text40       000000
__Ltext42                 text42       000000
__Ltext5                  text5        000000
__Ltext6                  text6        000000
__Ltext7                  text7        000000
__Ltext8                  text8        000000
__Ltext9                  text9        000000
__S0                      (abs)        300008
__S1                      (abs)        00014A
__S2                      (abs)        000000
___aldiv                  text5        0024A8
___aldiv@counter          cstackCOMRAM 00002C
___aldiv@dividend         cstackCOMRAM 000024
___aldiv@divisor          cstackCOMRAM 000028
___aldiv@quotient         cstackCOMRAM 00002E
___aldiv@sign             cstackCOMRAM 00002D
___altoft                 text14       002BD6
___altoft@c               cstackCOMRAM 000027
___altoft@exp             cstackCOMRAM 00002F
___altoft@sign            cstackCOMRAM 000030
___awtoft                 text16       002E26
___awtoft@c               cstackCOMRAM 000020
___awtoft@sign            cstackCOMRAM 000023
___ftadd                  text37       001870
___ftadd@exp1             cstackCOMRAM 00002F
___ftadd@exp2             cstackCOMRAM 00002E
___ftadd@f1               cstackCOMRAM 000024
___ftadd@f2               cstackCOMRAM 000027
___ftadd@sign             cstackCOMRAM 00002D
___ftdiv                  text29       001D18
___ftdiv@cntr             cstackBANK0  00007E
___ftdiv@exp              cstackBANK0  000082
___ftdiv@f1               cstackBANK0  000075
___ftdiv@f2               cstackBANK0  000078
___ftdiv@f3               cstackBANK0  00007F
___ftdiv@sign             cstackBANK0  000083
___ftge                   text36       002574
___ftge@ff1               cstackBANK0  00006C
___ftge@ff2               cstackBANK0  00006F
___ftmul                  text35       001BC6
___ftmul@cntr             cstackBANK0  00006A
___ftmul@exp              cstackBANK0  000066
___ftmul@f1               cstackBANK0  000060
___ftmul@f2               cstackBANK0  000063
___ftmul@f3_as_product    cstackBANK0  000067
___ftmul@sign             cstackBANK0  00006B
___ftneg                  text34       002F08
___ftneg@f1               cstackCOMRAM 000020
___ftpack                 text38       0027BC
___ftpack@arg             cstackCOMRAM 000018
___ftpack@exp             cstackCOMRAM 00001B
___ftpack@sign            cstackCOMRAM 00001C
___ftsub                  text15       002DDA
___ftsub@f1               cstackBANK0  000060
___ftsub@f2               cstackBANK0  000063
___fttol                  text33       0022D4
___fttol@exp1             cstackCOMRAM 000026
___fttol@f1               cstackCOMRAM 000018
___fttol@lval             cstackCOMRAM 000022
___fttol@sign1            cstackCOMRAM 000021
___inthi_sp               stack        000000
___intlo_sp               stack        000000
___llmod                  text42       002CC2
___llmod@counter          cstackCOMRAM 000009
___llmod@dividend         cstackCOMRAM 000001
___llmod@divisor          cstackCOMRAM 000005
___lltoft                 text17       002D28
___lltoft@c               cstackCOMRAM 000020
___lltoft@exp             cstackCOMRAM 000028
___lmul                   text4        002D84
___lmul@multiplicand      cstackCOMRAM 00001C
___lmul@multiplier        cstackCOMRAM 000018
___lmul@product           cstackCOMRAM 000020
___param_bank             (abs)        000010
___rparam_used            (abs)        000001
___sp                     stack        000000
___wmul                   text28       002EE2
___wmul@multiplicand      cstackCOMRAM 00001A
___wmul@multiplier        cstackCOMRAM 000018
___wmul@product           cstackCOMRAM 00001C
__accesstop               (abs)        000060
__activetblptr            (abs)        000002
__end_of_DelayMs          text30       002EE2
__end_of_IdleI2C          text23       002F7E
__end_of_OpenI2C_StSpeed  text40       002F90
__end_of_PICsetup         text39       002F50
__end_of_PIDupdate        text32       0010A4
__end_of_PWMSetup         text31       002F9C
__end_of_RADtoDEG         smallconst   00067A
__end_of_ReadI2C          text24       002F6C
__end_of_WriteI2C         text22       002EB8
__end_of___aldiv          text5        002574
__end_of___altoft         text14       002C4E
__end_of___awtoft         text16       002E5E
__end_of___ftadd          text37       001A1C
__end_of___ftdiv          text29       001E64
__end_of___ftge           text36       00263C
__end_of___ftmul          text35       001D18
__end_of___ftneg          text34       002F2C
__end_of___ftpack         text38       00286A
__end_of___ftsub          text15       002E26
__end_of___fttol          text33       0023C8
__end_of___llmod          text42       002D28
__end_of___lltoft         text17       002D84
__end_of___lmul           text4        002DDA
__end_of___wmul           text28       002F08
__end_of__initialization  cinit        002CB4
__end_of__npowers_        smallconst   000650
__end_of__powers_         smallconst   000677
__end_of_atan             text25       0016B4
__end_of_computeAngle     text6        000D3A
__end_of_dpowers          smallconst   000629
__end_of_eval_poly        text27       0024A8
__end_of_exp              text10       0012DA
__end_of_fabs             text26       002E8E
__end_of_floor            text12       0022D4
__end_of_frexp            text13       0029A6
__end_of_getAccelX        text21       002BD6
__end_of_getAccelY        text20       002B4A
__end_of_getAccelZ        text19       002ABE
__end_of_getGyroY         text18       002A32
__end_of_ldexp            text11       0021E0
__end_of_log              text9        001FA6
__end_of_main             text0        0014C8
__end_of_map              text3        0020CC
__end_of_motorsUpdate     text2        0027BC
__end_of_my_ISR           intcode_body 002702
__end_of_pow              text8        001BC6
__end_of_sensorSetup      text1        002916
__end_of_sqrt             text7        001870
__end_ofatan@coeff_a      smallconst   0006C5
__end_ofatan@coeff_b      smallconst   0006D4
__end_ofexp@coeff         smallconst   000698
__end_oflog@coeff         smallconst   0006B3
__initialization          cinit        002C4E
__mediumconst             mediumconst  000000
__npowers_                smallconst   000629
__pbitbssCOMRAM           bitbssCOMRAM 000238
__pbssBANK0               bssBANK0     0000D3
__pbssBANK1               bssBANK1     000127
__pbssCOMRAM              bssCOMRAM    000033
__pcinit                  cinit        002C4E
__pcstackBANK0            cstackBANK0  000060
__pcstackBANK1            cstackBANK1  000100
__pcstackCOMRAM           cstackCOMRAM 000001
__pdataBANK0              dataBANK0    0000E7
__pdataCOMRAM             dataCOMRAM   00003E
__pidataBANK0             idataBANK0   002FA5
__pidataCOMRAM            idataCOMRAM  002F9C
__pintcode                intcode      000008
__pintcode_body           intcode_body 00263C
__powers_                 smallconst   000650
__psmallconst             smallconst   000600
__ptext0                  text0        0012DA
__ptext1                  text1        00286A
__ptext10                 text10       0010A4
__ptext11                 text11       0020CC
__ptext12                 text12       0021E0
__ptext13                 text13       002916
__ptext14                 text14       002BD6
__ptext15                 text15       002DDA
__ptext16                 text16       002E26
__ptext17                 text17       002D28
__ptext18                 text18       0029A6
__ptext19                 text19       002A32
__ptext2                  text2        002702
__ptext20                 text20       002ABE
__ptext21                 text21       002B4A
__ptext22                 text22       002E8E
__ptext23                 text23       002F6C
__ptext24                 text24       002F50
__ptext25                 text25       0014C8
__ptext26                 text26       002E5E
__ptext27                 text27       0023C8
__ptext28                 text28       002EE2
__ptext29                 text29       001D18
__ptext3                  text3        001FA6
__ptext30                 text30       002EB8
__ptext31                 text31       002F90
__ptext32                 text32       000D3A
__ptext33                 text33       0022D4
__ptext34                 text34       002F08
__ptext35                 text35       001BC6
__ptext36                 text36       002574
__ptext37                 text37       001870
__ptext38                 text38       0027BC
__ptext39                 text39       002F2C
__ptext4                  text4        002D84
__ptext40                 text40       002F7E
__ptext42                 text42       002CC2
__ptext5                  text5        0024A8
__ptext6                  text6        0006DC
__ptext7                  text7        0016B4
__ptext8                  text8        001A1C
__ptext9                  text9        001E64
__ramtop                  ramtop       000600
__size_of_DelayMs         (abs)        000000
__size_of_IdleI2C         (abs)        000000
__size_of_OpenI2C_StSpeed (abs)        000000
__size_of_PICsetup        (abs)        000000
__size_of_PIDupdate       (abs)        000000
__size_of_PWMSetup        (abs)        000000
__size_of_ReadI2C         (abs)        000000
__size_of_WriteI2C        (abs)        000000
__size_of___aldiv         (abs)        000000
__size_of___altoft        (abs)        000000
__size_of___awtoft        (abs)        000000
__size_of___ftadd         (abs)        000000
__size_of___ftdiv         (abs)        000000
__size_of___ftge          (abs)        000000
__size_of___ftmul         (abs)        000000
__size_of___ftneg         (abs)        000000
__size_of___ftpack        (abs)        000000
__size_of___ftsub         (abs)        000000
__size_of___fttol         (abs)        000000
__size_of___llmod         (abs)        000000
__size_of___lltoft        (abs)        000000
__size_of___lmul          (abs)        000000
__size_of___wmul          (abs)        000000
__size_of_atan            (abs)        000000
__size_of_computeAngle    (abs)        000000
__size_of_eval_poly       (abs)        000000
__size_of_exp             (abs)        000000
__size_of_fabs            (abs)        000000
__size_of_floor           (abs)        000000
__size_of_frexp           (abs)        000000
__size_of_getAccelX       (abs)        000000
__size_of_getAccelY       (abs)        000000
__size_of_getAccelZ       (abs)        000000
__size_of_getGyroY        (abs)        000000
__size_of_ldexp           (abs)        000000
__size_of_log             (abs)        000000
__size_of_main            (abs)        000000
__size_of_map             (abs)        000000
__size_of_motorsUpdate    (abs)        000000
__size_of_my_ISR          (abs)        000000
__size_of_pow             (abs)        000000
__size_of_sensorSetup     (abs)        000000
__size_of_sqrt            (abs)        000000
__smallconst              smallconst   000600
_accX                     bssBANK0     0000DA
_alpha                    dataBANK0    0000EA
_atan                     text25       0014C8
_computeAngle             text6        0006DC
_computeAngle$1189        cstackBANK1  000107
_computeAngle$1190        cstackBANK1  00010A
_computeAngle$1191        cstackBANK1  00010D
_computeAngle$1192        cstackBANK1  000110
_computeAngle$1193        cstackBANK1  000113
_computeAngle$1194        cstackBANK1  000116
_computeAngle$1195        cstackBANK1  000119
_computeAngle$1196        cstackBANK1  00011C
_currentAngle             bssBANK0     0000DD
_data                     bssBANK1     000127
_dpowers                  smallconst   000601
_errno                    bssCOMRAM    00003B
_errore                   bssBANK0     0000E0
_eval_poly                text27       0023C8
_exp                      text10       0010A4
_exp$1205                 cstackBANK0  000087
_fabs                     text26       002E5E
_floor                    text12       0021E0
_frexp                    text13       002916
_getAccelX                text21       002B4A
_getAccelY                text20       002ABE
_getAccelZ                text19       002A32
_getGyroY                 text18       0029A6
_gyroY                    bssCOMRAM    000036
_i                        bssBANK0     0000E6
_j                        bssCOMRAM    00003D
_kD                       dataCOMRAM   00003E
_kI                       dataCOMRAM   000041
_kP                       dataCOMRAM   000044
_ldexp                    text11       0020CC
_log                      text9        001E64
_loopMillis               bssBANK1     00013B
_main                     text0        0012DA
_main$1198                cstackBANK0  0000CD
_main$419                 cstackBANK0  0000D0
_map                      text3        001FA6
_millis                   bssBANK0     0000D3
_motorsUpdate             text2        002702
_my_ISR                   intcode      000008
_offsetAngle              bssBANK0     0000E3
_pidMillis                bssBANK1     00013F
_pow                      text8        001A1C
_pow$1203                 cstackBANK0  000093
_pow$1204                 cstackBANK0  000096
_sensMillis               bssBANK1     000143
_sensorSetup              text1        00286A
_sqrt                     text7        0016B4
_vPin                     bssBANK1     000147
atan@coeff_a              smallconst   0006B3
atan@coeff_b              smallconst   0006C5
atan@f                    cstackBANK0  0000B1
atan@recip                cstackBANK0  0000BA
atan@val                  cstackBANK0  0000BE
atan@val_squared          cstackBANK0  0000BB
atan@x                    cstackBANK0  0000B7
atan@y                    cstackBANK0  0000B4
btemp                     temp         000048
computeAngle@angleSum     cstackBANK1  000104
computeAngle@dt           cstackBANK1  000100
computeAngle@mode         cstackBANK1  000103
computeAngle@rawAccX      cstackBANK1  00011F
computeAngle@rawAccY      cstackBANK1  000121
computeAngle@rawAccZ      cstackBANK1  000123
computeAngle@rawGyroY     cstackBANK1  000125
end_of_initialization     cinit        002CB4
eval_poly@d               cstackBANK0  00006F
eval_poly@n               cstackBANK0  000071
eval_poly@res             cstackBANK0  000075
eval_poly@x               cstackBANK0  00006C
exp@coeff                 smallconst   00067A
exp@exponent              cstackBANK0  00008A
exp@sign                  cstackBANK0  00008C
exp@x                     cstackBANK0  000084
fabs@d                    cstackCOMRAM 000023
floor@expon               cstackBANK0  00007B
floor@i                   cstackBANK0  000078
floor@x                   cstackBANK0  000075
frexp@eptr                cstackCOMRAM 00001B
frexp@value               cstackCOMRAM 000018
getAccelX@data            cstackCOMRAM 000022
getAccelX@dataH           cstackCOMRAM 00001E
getAccelX@dataL           cstackCOMRAM 000020
getAccelY@data            cstackCOMRAM 000022
getAccelY@dataH           cstackCOMRAM 00001E
getAccelY@dataL           cstackCOMRAM 000020
getAccelZ@data            cstackCOMRAM 000022
getAccelZ@dataH           cstackCOMRAM 00001E
getAccelZ@dataL           cstackCOMRAM 000020
getGyroY@data             cstackCOMRAM 000022
getGyroY@dataH            cstackCOMRAM 00001E
getGyroY@dataL            cstackCOMRAM 000020
int$flags                 temp         000048
int_func                  intcode_body 00263C
intlevel0                 text         000000
intlevel1                 text         000000
intlevel2                 text         000000
intlevel3                 text         000000
ldexp@newexp              cstackBANK0  00007B
ldexp@value               cstackBANK0  000078
log@coeff                 smallconst   000698
log@exponent              cstackBANK0  00007B
log@x                     cstackBANK0  000078
map@in_max                cstackBANK0  000068
map@in_min                cstackBANK0  000064
map@out_max               cstackBANK0  000070
map@out_min               cstackBANK0  00006C
map@x                     cstackBANK0  000060
motorsUpdate@torque       cstackBANK0  000080
pow@sign                  cstackBANK0  000099
pow@x                     cstackBANK0  00008D
pow@y                     cstackBANK0  000090
pow@yi                    cstackBANK0  00009A
sqrt@a                    cstackBANK0  00009E
sqrt@i                    cstackBANK0  0000AA
sqrt@og                   cstackBANK0  0000A4
sqrt@q                    cstackBANK0  0000AB
sqrt@x                    cstackBANK0  0000AE
sqrt@z                    cstackBANK0  0000A7
stackhi                   (abs)        0005FF
stacklo                   (abs)        00014A
start                     init         000016
start_initialization      cinit        002C4E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 34 in file "D:\Desktop\Self Balancing Robot v2.0 Funzionante quasi\main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       6       0       0       0       0       0
      Temps:          0       8       0       0       0       0       0
      Totals:         0      14       0       0       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels required when called:    8
 This function calls:
		_DelayMs
		_OpenI2C_StSpeed
		_PICsetup
		_PIDupdate
		_PWMSetup
		___ftadd
		___ftge
		___ftneg
		_computeAngle
		_motorsUpdate
		_sensorSetup
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _sensorSetup *****************
 Defined at:
		line 38 in file "D:\Desktop\Self Balancing Robot v2.0 Funzionante quasi\MPU-6050.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_IdleI2C
		_WriteI2C
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _motorsUpdate *****************
 Defined at:
		line 29 in file "D:\Desktop\Self Balancing Robot v2.0 Funzionante quasi\PID&Motors.c"
 Parameters:    Size  Location     Type
  torque          2   32[BANK0 ] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       2       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       2       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_map
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _map *****************
 Defined at:
		line 4 in file "D:\Desktop\Self Balancing Robot v2.0 Funzionante quasi\main.h"
 Parameters:    Size  Location     Type
  x               4    0[BANK0 ] long 
  in_min          4    4[BANK0 ] long 
  in_max          4    8[BANK0 ] long 
  out_min         4   12[BANK0 ] long 
  out_max         4   16[BANK0 ] long 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  4    0[BANK0 ] long 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0      20       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0      12       0       0       0       0       0
      Totals:         0      32       0       0       0       0       0
Total ram usage:       32 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___aldiv
		___lmul
 This function is called by:
		_motorsUpdate
 This function uses a non-reentrant model


 *************** function ___lmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul32.c"
 Parameters:    Size  Location     Type
  multiplier      4   23[COMRAM] unsigned long 
  multiplicand    4   27[COMRAM] unsigned long 
 Auto vars:     Size  Location     Type
  product         4   31[COMRAM] unsigned long 
 Return value:  Size  Location     Type
                  4   23[COMRAM] unsigned long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         8       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:        12       0       0       0       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_map
 This function uses a non-reentrant model


 *************** function ___aldiv *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
 Parameters:    Size  Location     Type
  dividend        4   35[COMRAM] long 
  divisor         4   39[COMRAM] long 
 Auto vars:     Size  Location     Type
  quotient        4   45[COMRAM] long 
  sign            1   44[COMRAM] unsigned char 
  counter         1   43[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  4   35[COMRAM] long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         8       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:        14       0       0       0       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_map
 This function uses a non-reentrant model


 *************** function _computeAngle *****************
 Defined at:
		line 172 in file "D:\Desktop\Self Balancing Robot v2.0 Funzionante quasi\MPU-6050.c"
 Parameters:    Size  Location     Type
  mode            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  mode            1    3[BANK1 ] unsigned char 
  angleSum        3    4[BANK1 ] float 
  dt              3    0[BANK1 ] float 
  rawGyroY        2   37[BANK1 ] int 
  rawAccZ         2   35[BANK1 ] int 
  rawAccY         2   33[BANK1 ] int 
  rawAccX         2   31[BANK1 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0      39       0       0       0       0
      Temps:          0       4       0       0       0       0       0
      Totals:         0       4      39       0       0       0       0
Total ram usage:       43 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_DelayMs
		___awtoft
		___ftadd
		___ftdiv
		___ftmul
		___ftneg
		___lltoft
		_atan
		_getAccelX
		_getAccelY
		_getAccelZ
		_getGyroY
		_pow
		_sqrt
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _sqrt *****************
 Defined at:
		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\sprcsqrt.c"
 Parameters:    Size  Location     Type
  a               3   62[BANK0 ] void 
 Auto vars:     Size  Location     Type
  x               3   78[BANK0 ] void 
  q               3   75[BANK0 ] void 
  z               3   71[BANK0 ] void 
  og              3   68[BANK0 ] void 
  i               1   74[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  3   62[BANK0 ] unsigned char 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       3       0       0       0       0       0
      Locals:         0      13       0       0       0       0       0
      Temps:          0       3       0       0       0       0       0
      Totals:         0      19       0       0       0       0       0
Total ram usage:       19 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		___ftge
		___ftmul
		___ftsub
 This function is called by:
		_computeAngle
 This function uses a non-reentrant model


 *************** function _pow *****************
 Defined at:
		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\pow.c"
 Parameters:    Size  Location     Type
  x               3   45[BANK0 ] unsigned char 
  y               3   48[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  yi              4   58[BANK0 ] unsigned long 
  sign            1   57[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  3   45[BANK0 ] unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       6       0       0       0       0       0
      Locals:         0      11       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0      17       0       0       0       0       0
Total ram usage:       17 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		___ftge
		___ftmul
		___ftneg
		___fttol
		___lltoft
		_exp
		_log
 This function is called by:
		_computeAngle
 This function uses a non-reentrant model


 *************** function _log *****************
 Defined at:
		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\log.c"
 Parameters:    Size  Location     Type
  x               3   24[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  exponent        2   27[BANK0 ] int 
 Return value:  Size  Location     Type
                  3   24[BANK0 ] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       3       0       0       0       0       0
      Locals:         0       2       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       5       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		___awtoft
		___ftadd
		___ftmul
		_eval_poly
		_frexp
 This function is called by:
		_pow
 This function uses a non-reentrant model


 *************** function _exp *****************
 Defined at:
		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\exp.c"
 Parameters:    Size  Location     Type
  x               3   36[BANK0 ] int 
 Auto vars:     Size  Location     Type
  exponent        2   42[BANK0 ] int 
  sign            1   44[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  3   36[BANK0 ] unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       3       0       0       0       0       0
      Locals:         0       6       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       9       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		___awtoft
		___ftdiv
		___ftge
		___ftmul
		___ftneg
		___ftsub
		___fttol
		_eval_poly
		_floor
		_ldexp
 This function is called by:
		_pow
 This function uses a non-reentrant model


 *************** function _ldexp *****************
 Defined at:
		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
 Parameters:    Size  Location     Type
  value           3   24[BANK0 ] unsigned char 
  newexp          2   27[BANK0 ] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3   24[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       5       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       2       0       0       0       0       0
      Totals:         0       7       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_exp
 This function uses a non-reentrant model


 *************** function _floor *****************
 Defined at:
		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\floor.c"
 Parameters:    Size  Location     Type
  x               3   21[BANK0 ] int 
 Auto vars:     Size  Location     Type
  i               3   24[BANK0 ] int 
  expon           2   27[BANK0 ] int 
 Return value:  Size  Location     Type
                  3   21[BANK0 ] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       3       0       0       0       0       0
      Locals:         0       5       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       8       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___altoft
		___ftadd
		___ftge
		___fttol
		_frexp
 This function is called by:
		_exp
 This function uses a non-reentrant model


 *************** function _frexp *****************
 Defined at:
		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
 Parameters:    Size  Location     Type
  value           3   23[COMRAM] int 
  eptr            2   26[COMRAM] PTR int 
		 -> log@exponent(2), floor@expon(2), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3   23[COMRAM] PTR int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         5       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_floor
		_log
 This function uses a non-reentrant model


 *************** function ___altoft *****************
 Defined at:
		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\altoft.c"
 Parameters:    Size  Location     Type
  c               4   38[COMRAM] long 
 Auto vars:     Size  Location     Type
  sign            1   47[COMRAM] unsigned char 
  exp             1   46[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  3   38[COMRAM] float 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0
      Totals:        10       0       0       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___ftpack
 This function is called by:
		_floor
 This function uses a non-reentrant model


 *************** function ___ftsub *****************
 Defined at:
		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
 Parameters:    Size  Location     Type
  f1              3    0[BANK0 ] float 
  f2              3    3[BANK0 ] float 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3    0[BANK0 ] float 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       6       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       6       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___ftadd
 This function is called by:
		_sqrt
		_exp
		_sprintf
 This function uses a non-reentrant model


 *************** function ___awtoft *****************
 Defined at:
		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
 Parameters:    Size  Location     Type
  c               2   31[COMRAM] int 
 Auto vars:     Size  Location     Type
  sign            1   34[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  3   31[COMRAM] float 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         3       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___ftpack
 This function is called by:
		_computeAngle
		_exp
		_log
 This function uses a non-reentrant model


 *************** function ___lltoft *****************
 Defined at:
		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lltoft.c"
 Parameters:    Size  Location     Type
  c               4   31[COMRAM] unsigned long 
 Auto vars:     Size  Location     Type
  exp             1   39[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  3   31[COMRAM] float 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0
      Totals:         9       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___ftpack
 This function is called by:
		_computeAngle
		_pow
		_sprintf
 This function uses a non-reentrant model


 *************** function _getGyroY *****************
 Defined at:
		line 76 in file "D:\Desktop\Self Balancing Robot v2.0 Funzionante quasi\MPU-6050.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  data            2   33[COMRAM] int 
  dataL           2   31[COMRAM] int 
  dataH           2   29[COMRAM] int 
 Return value:  Size  Location     Type
                  2   25[COMRAM] int 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:        10       0       0       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_ReadI2C
		_WriteI2C
 This function is called by:
		_computeAngle
 This function uses a non-reentrant model


 *************** function _getAccelZ *****************
 Defined at:
		line 148 in file "D:\Desktop\Self Balancing Robot v2.0 Funzionante quasi\MPU-6050.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  data            2   33[COMRAM] int 
  dataL           2   31[COMRAM] int 
  dataH           2   29[COMRAM] int 
 Return value:  Size  Location     Type
                  2   25[COMRAM] int 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:        10       0       0       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_ReadI2C
		_WriteI2C
 This function is called by:
		_computeAngle
 This function uses a non-reentrant model


 *************** function _getAccelY *****************
 Defined at:
		line 124 in file "D:\Desktop\Self Balancing Robot v2.0 Funzionante quasi\MPU-6050.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  data            2   33[COMRAM] int 
  dataL           2   31[COMRAM] int 
  dataH           2   29[COMRAM] int 
 Return value:  Size  Location     Type
                  2   25[COMRAM] int 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:        10       0       0       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_ReadI2C
		_WriteI2C
 This function is called by:
		_computeAngle
 This function uses a non-reentrant model


 *************** function _getAccelX *****************
 Defined at:
		line 100 in file "D:\Desktop\Self Balancing Robot v2.0 Funzionante quasi\MPU-6050.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  data            2   33[COMRAM] int 
  dataL           2   31[COMRAM] int 
  dataH           2   29[COMRAM] int 
 Return value:  Size  Location     Type
                  2   25[COMRAM] int 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:        10       0       0       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_ReadI2C
		_WriteI2C
 This function is called by:
		_computeAngle
 This function uses a non-reentrant model


 *************** function _WriteI2C *****************
 Defined at:
		line 75 in file "D:\Desktop\Self Balancing Robot v2.0 Funzionante quasi\i2c.c"
 Parameters:    Size  Location     Type
  data_out        1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  data_out        1   24[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_IdleI2C
 This function is called by:
		_sensorSetup
		_getGyroY
		_getAccelX
		_getAccelY
		_getAccelZ
 This function uses a non-reentrant model


 *************** function _IdleI2C *****************
 Defined at:
		line 48 in file "D:\Desktop\Self Balancing Robot v2.0 Funzionante quasi\i2c.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_WriteI2C
		_sensorSetup
 This function uses a non-reentrant model


 *************** function _ReadI2C *****************
 Defined at:
		line 67 in file "D:\Desktop\Self Balancing Robot v2.0 Funzionante quasi\i2c.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_getGyroY
		_getAccelX
		_getAccelY
		_getAccelZ
 This function uses a non-reentrant model


 *************** function _atan *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\atan.c"
 Parameters:    Size  Location     Type
  f               3   81[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  val             3   94[BANK0 ] unsigned char 
  val_squared     3   91[BANK0 ] unsigned char 
  x               3   87[BANK0 ] unsigned char 
  y               3   84[BANK0 ] unsigned char 
  recip           1   90[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  3   81[BANK0 ] unsigned char 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       3       0       0       0       0       0
      Locals:         0      13       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0      16       0       0       0       0       0
Total ram usage:       16 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		___ftadd
		___ftdiv
		___ftge
		___ftmul
		___ftneg
		_eval_poly
		_fabs
 This function is called by:
		_computeAngle
 This function uses a non-reentrant model


 *************** function _fabs *****************
 Defined at:
		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fabs.c"
 Parameters:    Size  Location     Type
  d               3   34[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3   34[COMRAM] unsigned char 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         3       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___ftneg
 This function is called by:
		_atan
 This function uses a non-reentrant model


 *************** function _eval_poly *****************
 Defined at:
		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\evalpoly.c"
 Parameters:    Size  Location     Type
  x               3   12[BANK0 ] unsigned char 
  d               2   15[BANK0 ] PTR const 
		 -> log@coeff(27), exp@coeff(30), atan@coeff_a(18), atan@coeff_b(15), 
  n               2   17[BANK0 ] int 
 Auto vars:     Size  Location     Type
  res             3   21[BANK0 ] int 
 Return value:  Size  Location     Type
                  3   12[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       7       0       0       0       0       0
      Locals:         0       3       0       0       0       0       0
      Temps:          0       2       0       0       0       0       0
      Totals:         0      12       0       0       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___ftadd
		___ftmul
		___wmul
 This function is called by:
		_atan
		_exp
		_log
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2   23[COMRAM] unsigned int 
  multiplicand    2   25[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  product         2   27[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  2   23[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_eval_poly
		_sprintf
		_scale
		_fround
 This function uses a non-reentrant model


 *************** function ___ftdiv *****************
 Defined at:
		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
 Parameters:    Size  Location     Type
  f1              3   21[BANK0 ] float 
  f2              3   24[BANK0 ] float 
 Auto vars:     Size  Location     Type
  f3              3   31[BANK0 ] float 
  sign            1   35[BANK0 ] unsigned char 
  exp             1   34[BANK0 ] unsigned char 
  cntr            1   30[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  3   21[BANK0 ] float 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       6       0       0       0       0       0
      Locals:         0       6       0       0       0       0       0
      Temps:          0       3       0       0       0       0       0
      Totals:         0      15       0       0       0       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___ftpack
 This function is called by:
		_computeAngle
		_atan
		_exp
 This function uses a non-reentrant model


 *************** function _DelayMs *****************
 Defined at:
		line 11 in file "D:\Desktop\Self Balancing Robot v2.0 Funzionante quasi\delay.c"
 Parameters:    Size  Location     Type
  cnt             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  cnt             1   23[COMRAM] unsigned char 
  _dcnt           1   25[COMRAM] unsigned char 
  i               1   24[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_computeAngle
		_main
		_bluetoothTX_data
 This function uses a non-reentrant model


 *************** function _PWMSetup *****************
 Defined at:
		line 1 in file "D:\Desktop\Self Balancing Robot v2.0 Funzionante quasi\PID&Motors.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _PIDupdate *****************
 Defined at:
		line 7 in file "D:\Desktop\Self Balancing Robot v2.0 Funzionante quasi\PID&Motors.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  Dterm           3   39[BANK0 ] float 
  Iterm           3   36[BANK0 ] float 
  Pterm           3   33[BANK0 ] float 
  dt              3    0        float 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0      24       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0      24       0       0       0       0       0
Total ram usage:       24 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___ftadd
		___ftge
		___ftmul
		___ftneg
		___fttol
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___fttol *****************
 Defined at:
		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
 Parameters:    Size  Location     Type
  f1              3   23[COMRAM] float 
 Auto vars:     Size  Location     Type
  lval            4   33[COMRAM] unsigned long 
  exp1            1   37[COMRAM] unsigned char 
  sign1           1   32[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  4   23[COMRAM] long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0
      Temps:          5       0       0       0       0       0       0
      Totals:        15       0       0       0       0       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_PIDupdate
		_pow
		_exp
		_floor
		_sprintf
 This function uses a non-reentrant model


 *************** function ___ftneg *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftneg.c"
 Parameters:    Size  Location     Type
  f1              3   31[COMRAM] float 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3   31[COMRAM] float 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         3       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_computeAngle
		_PIDupdate
		_main
		_atan
		_fabs
		_pow
		_exp
		_sprintf
 This function uses a non-reentrant model


 *************** function ___ftmul *****************
 Defined at:
		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
 Parameters:    Size  Location     Type
  f1              3    0[BANK0 ] float 
  f2              3    3[BANK0 ] float 
 Auto vars:     Size  Location     Type
  f3_as_produc    3    7[BANK0 ] unsigned um
  sign            1   11[BANK0 ] unsigned char 
  cntr            1   10[BANK0 ] unsigned char 
  exp             1    6[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  3    0[BANK0 ] float 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       6       0       0       0       0       0
      Locals:         0       6       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0
      Totals:         3      12       0       0       0       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___ftpack
 This function is called by:
		_computeAngle
		_PIDupdate
		_atan
		_eval_poly
		_pow
		_sqrt
		_exp
		_log
		_sprintf
		_scale
		_fround
 This function uses a non-reentrant model


 *************** function ___ftge *****************
 Defined at:
		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
 Parameters:    Size  Location     Type
  ff1             3   12[BANK0 ] float 
  ff2             3   15[BANK0 ] float 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       6       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       3       0       0       0       0       0
      Totals:         0       9       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_PIDupdate
		_main
		_atan
		_pow
		_sqrt
		_exp
		_floor
		_sprintf
 This function uses a non-reentrant model


 *************** function ___ftadd *****************
 Defined at:
		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
 Parameters:    Size  Location     Type
  f1              3   35[COMRAM] float 
  f2              3   38[COMRAM] float 
 Auto vars:     Size  Location     Type
  exp1            1   46[COMRAM] unsigned char 
  exp2            1   45[COMRAM] unsigned char 
  sign            1   44[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  3   35[COMRAM] float 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         6       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0
      Totals:        12       0       0       0       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___ftpack
 This function is called by:
		_computeAngle
		_PIDupdate
		_main
		_atan
		_eval_poly
		___ftsub
		_floor
		_log
		_sprintf
 This function uses a non-reentrant model


 *************** function ___ftpack *****************
 Defined at:
		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
 Parameters:    Size  Location     Type
  arg             3   23[COMRAM] unsigned um
  exp             1   26[COMRAM] unsigned char 
  sign            1   27[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3   23[COMRAM] float 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         5       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		___altoft
		___awtoft
		___ftadd
		___ftdiv
		___ftmul
		___lltoft
 This function uses a non-reentrant model


 *************** function _PICsetup *****************
 Defined at:
		line 17 in file "D:\Desktop\Self Balancing Robot v2.0 Funzionante quasi\main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _OpenI2C_StSpeed *****************
 Defined at:
		line 59 in file "D:\Desktop\Self Balancing Robot v2.0 Funzionante quasi\i2c.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _my_ISR *****************
 Defined at:
		line 57 in file "D:\Desktop\Self Balancing Robot v2.0 Funzionante quasi\main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2  408[None  ] int 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:         14       0       0       0       0       0       0
      Totals:        14       0       0       0       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___llmod
 This function is called by:
		Interrupt level 2
 This function uses a non-reentrant model


 *************** function ___llmod *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\llmod.c"
 Parameters:    Size  Location     Type
  dividend        4    0[COMRAM] unsigned long 
  divisor         4    4[COMRAM] unsigned long 
 Auto vars:     Size  Location     Type
  counter         1    8[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  4    0[COMRAM] unsigned long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         8       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         9       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_my_ISR
		_sprintf
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\log.c
		_log           		CODE           	1E64	0000	323

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\log.c estimated size: 323

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c
		___ftsub       		CODE           	2DDA	0000	77

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c estimated size: 77

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c
		___ftpack      		CODE           	27BC	0000	175

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c estimated size: 175

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\sprcsqrt.c
		_sqrt          		CODE           	16B4	0000	445

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\sprcsqrt.c estimated size: 445

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\llmod.c
		___llmod       		CODE           	2CC2	0000	103

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\llmod.c estimated size: 103

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\pow.c
		_pow           		CODE           	1A1C	0000	427

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\pow.c estimated size: 427

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c
		___wmul        		CODE           	2EE2	0000	39

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c estimated size: 39

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c
		_ldexp         		CODE           	20CC	0000	277
		_frexp         		CODE           	2916	0000	145

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c estimated size: 422

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\floor.c
		_floor         		CODE           	21E0	0000	245

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\floor.c estimated size: 245

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c
		___ftmul       		CODE           	1BC6	0000	339

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c estimated size: 339

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\atan.c
		_atan          		CODE           	14C8	0000	493

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\atan.c estimated size: 493

D:\Desktop\Self Balancing Robot v2.0 Funzionante quasi\MPU-6050.c
		_computeAngle  		CODE           	06DC	0000	1631
		_getAccelX     		CODE           	2B4A	0000	141
		_getAccelY     		CODE           	2ABE	0000	141
		_getAccelZ     		CODE           	2A32	0000	141
		_sensorSetup   		CODE           	286A	0000	173
		_getGyroY      		CODE           	29A6	0000	141

D:\Desktop\Self Balancing Robot v2.0 Funzionante quasi\MPU-6050.c estimated size: 2368

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c
		___ftdiv       		CODE           	1D18	0000	333

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c estimated size: 333

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul32.c
		___lmul        		CODE           	2D84	0000	87

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul32.c estimated size: 87

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c
		___aldiv       		CODE           	24A8	0000	205

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c estimated size: 205

D:\Desktop\Self Balancing Robot v2.0 Funzionante quasi\delay.c
		_DelayMs       		CODE           	2EB8	0000	43

D:\Desktop\Self Balancing Robot v2.0 Funzionante quasi\delay.c estimated size: 43

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c
		___fttol       		CODE           	22D4	0000	245

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c estimated size: 245

shared
		exp@coeff      		SMALLCONST     	067A	0000	31
		_RADtoDEG      		SMALLCONST     	0677	0000	4
		__powers_      		SMALLCONST     	0650	0000	40
		_dpowers       		SMALLCONST     	0601	0000	41
		atan@coeff_a   		SMALLCONST     	06B3	0000	19
		atan@coeff_b   		SMALLCONST     	06C5	0000	16
		__npowers_     		SMALLCONST     	0629	0000	40
		__initialization		CODE           	2C4E	0000	103
		log@coeff      		SMALLCONST     	0698	0000	28

shared estimated size: 322

D:\Desktop\Self Balancing Robot v2.0 Funzionante quasi\main.c
		_PICsetup      		CODE           	2F2C	0000	37
		_main          		CODE           	12DA	0000	495
		_my_ISR        		CODE           	0008	0000	213

D:\Desktop\Self Balancing Robot v2.0 Funzionante quasi\main.c estimated size: 745

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c
		___awtoft      		CODE           	2E26	0000	57

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c estimated size: 57

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\altoft.c
		___altoft      		CODE           	2BD6	0000	121

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\altoft.c estimated size: 121

D:\Desktop\Self Balancing Robot v2.0 Funzionante quasi\main.h
		_map           		CODE           	1FA6	0000	295

D:\Desktop\Self Balancing Robot v2.0 Funzionante quasi\main.h estimated size: 295

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c
		___ftadd       		CODE           	1870	0000	429

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c estimated size: 429

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\exp.c
		_exp           		CODE           	10A4	0000	567

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\exp.c estimated size: 567

D:\Desktop\Self Balancing Robot v2.0 Funzionante quasi\i2c.c
		_IdleI2C       		CODE           	2F6C	0000	19
		_OpenI2C_StSpeed		CODE           	2F7E	0000	19
		_ReadI2C       		CODE           	2F50	0000	29
		_WriteI2C      		CODE           	2E8E	0000	43

D:\Desktop\Self Balancing Robot v2.0 Funzionante quasi\i2c.c estimated size: 110

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\evalpoly.c
		_eval_poly     		CODE           	23C8	0000	225

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\evalpoly.c estimated size: 225

D:\Desktop\Self Balancing Robot v2.0 Funzionante quasi\PID&Motors.c
		_PWMSetup      		CODE           	2F90	0000	13
		_motorsUpdate  		CODE           	2702	0000	187
		_PIDupdate     		CODE           	0D3A	0000	875

D:\Desktop\Self Balancing Robot v2.0 Funzionante quasi\PID&Motors.c estimated size: 1075

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lltoft.c
		___lltoft      		CODE           	2D28	0000	93

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lltoft.c estimated size: 93

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c
		___ftge        		CODE           	2574	0000	201

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c estimated size: 201

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftneg.c
		___ftneg       		CODE           	2F08	0000	37

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftneg.c estimated size: 37

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fabs.c
		_fabs          		CODE           	2E5E	0000	49

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fabs.c estimated size: 49

